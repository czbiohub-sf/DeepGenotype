INFO  @ Mon, 08 Apr 2024 16:13:41:
	 Creating Folder CRISPResso_on_mNGplate19_sorted_B11_LRP5-C 

INFO  @ Mon, 08 Apr 2024 16:13:41:
	 Computing quantification windows 

INFO  @ Mon, 08 Apr 2024 16:13:41:
	 Estimating average read length... 

INFO  @ Mon, 08 Apr 2024 16:13:41:
	 Merging paired sequences with Flash... 

INFO  @ Mon, 08 Apr 2024 16:13:41:
	 Running FLASH command: flash "/hpc/projects/data.science/duo.peng/DeepGenotype/DeepGenotype/test_MiSeq/fastq/mNGplate19_sorted_B11_LRP5-C_S109_R1_001.fastq.gz" "/hpc/projects/data.science/duo.peng/DeepGenotype/DeepGenotype/test_MiSeq/fastq/mNGplate19_sorted_B11_LRP5-C_S109_R2_001.fastq.gz" --min-overlap 10 --max-overlap 100 --allow-outies -z -d CRISPResso_on_mNGplate19_sorted_B11_LRP5-C -o out >>CRISPResso_on_mNGplate19_sorted_B11_LRP5-C/CRISPResso_RUNNING_LOG.txt 2>&1 

INFO  @ Mon, 08 Apr 2024 16:13:43:
	 Done! 

INFO  @ Mon, 08 Apr 2024 16:13:43:
	 Aligning sequences... 

INFO  @ Mon, 08 Apr 2024 16:13:43:
	 Processing reads; N_TOT_READS: 0 N_COMPUTED_ALN: 0 N_CACHED_ALN: 0 N_COMPUTED_NOTALN: 0 N_CACHED_NOTALN: 0 

INFO  @ Mon, 08 Apr 2024 16:13:45:
	 Processing reads; N_TOT_READS: 10000 N_COMPUTED_ALN: 1929 N_CACHED_ALN: 8067 N_COMPUTED_NOTALN: 4 N_CACHED_NOTALN: 0 

INFO  @ Mon, 08 Apr 2024 16:13:48:
	 Processing reads; N_TOT_READS: 20000 N_COMPUTED_ALN: 3565 N_CACHED_ALN: 16425 N_COMPUTED_NOTALN: 10 N_CACHED_NOTALN: 0 

INFO  @ Mon, 08 Apr 2024 16:13:49:
	 Processing reads; N_TOT_READS: 30000 N_COMPUTED_ALN: 5079 N_CACHED_ALN: 24908 N_COMPUTED_NOTALN: 13 N_CACHED_NOTALN: 0 

INFO  @ Mon, 08 Apr 2024 16:13:51:
	 Processing reads; N_TOT_READS: 40000 N_COMPUTED_ALN: 6411 N_CACHED_ALN: 33575 N_COMPUTED_NOTALN: 14 N_CACHED_NOTALN: 0 

INFO  @ Mon, 08 Apr 2024 16:13:53:
	 Processing reads; N_TOT_READS: 50000 N_COMPUTED_ALN: 7685 N_CACHED_ALN: 42299 N_COMPUTED_NOTALN: 16 N_CACHED_NOTALN: 0 

INFO  @ Mon, 08 Apr 2024 16:13:55:
	 Processing reads; N_TOT_READS: 60000 N_COMPUTED_ALN: 9044 N_CACHED_ALN: 50937 N_COMPUTED_NOTALN: 18 N_CACHED_NOTALN: 1 

INFO  @ Mon, 08 Apr 2024 16:13:55:
	 Finished reads; N_TOT_READS: 62488 N_COMPUTED_ALN: 9300 N_CACHED_ALN: 53169 N_COMPUTED_NOTALN: 18 N_CACHED_NOTALN: 1 

INFO  @ Mon, 08 Apr 2024 16:13:55:
	 Done! 

INFO  @ Mon, 08 Apr 2024 16:13:55:
	 Quantifying indels/substitutions... 

INFO  @ Mon, 08 Apr 2024 16:13:58:
	 Done! 

INFO  @ Mon, 08 Apr 2024 16:13:58:
	 Calculating allele frequencies... 

INFO  @ Mon, 08 Apr 2024 16:13:58:
	 Done! 

INFO  @ Mon, 08 Apr 2024 16:13:58:
	 Saving processed data... 

INFO  @ Mon, 08 Apr 2024 16:13:58:
	 Making Plots... 

INFO  @ Mon, 08 Apr 2024 16:13:59:
	 Begin processing plots for amplicon LRP5 

/home/duo.peng/.conda/envs/DeepGenotype/lib/python3.9/site-packages/CRISPResso2/CRISPRessoCORE.py:3578: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  modification_percentage_summary_df = pd.DataFrame(mod_pcts, columns=colnames).apply(pd.to_numeric, errors='ignore')
/home/duo.peng/.conda/envs/DeepGenotype/lib/python3.9/site-packages/CRISPResso2/CRISPRessoPlot.py:188: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ins_pct = float(mod_pct_df_indexed.loc[sampleName,'Insertions_Left'][pos_ind-2])
/home/duo.peng/.conda/envs/DeepGenotype/lib/python3.9/site-packages/CRISPResso2/CRISPRessoPlot.py:188: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ins_pct = float(mod_pct_df_indexed.loc[sampleName,'Insertions_Left'][pos_ind-2])
/home/duo.peng/.conda/envs/DeepGenotype/lib/python3.9/site-packages/CRISPResso2/CRISPRessoCORE.py:3965: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  hdr_nucleotide_percentage_summary_df = pd.DataFrame(nuc_pcts, columns=colnames).apply(pd.to_numeric, errors='ignore')
/home/duo.peng/.conda/envs/DeepGenotype/lib/python3.9/site-packages/CRISPResso2/CRISPRessoCORE.py:3977: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  hdr_modification_percentage_summary_df = pd.DataFrame(mod_pcts, columns=colnames).apply(pd.to_numeric, errors='ignore')
/home/duo.peng/.conda/envs/DeepGenotype/lib/python3.9/site-packages/CRISPResso2/CRISPRessoPlot.py:188: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ins_pct = float(mod_pct_df_indexed.loc[sampleName,'Insertions_Left'][pos_ind-2])
INFO  @ Mon, 08 Apr 2024 16:14:09:
	 Done! 

INFO  @ Mon, 08 Apr 2024 16:14:09:
	 Begin processing plots for amplicon HDR 

/home/duo.peng/.conda/envs/DeepGenotype/lib/python3.9/site-packages/CRISPResso2/CRISPRessoCORE.py:3578: FutureWarning: errors='ignore' is deprecated and will raise in a future version. Use to_numeric without passing `errors` and catch exceptions explicitly instead
  modification_percentage_summary_df = pd.DataFrame(mod_pcts, columns=colnames).apply(pd.to_numeric, errors='ignore')
/home/duo.peng/.conda/envs/DeepGenotype/lib/python3.9/site-packages/CRISPResso2/CRISPRessoPlot.py:188: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ins_pct = float(mod_pct_df_indexed.loc[sampleName,'Insertions_Left'][pos_ind-2])
/home/duo.peng/.conda/envs/DeepGenotype/lib/python3.9/site-packages/CRISPResso2/CRISPRessoPlot.py:188: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ins_pct = float(mod_pct_df_indexed.loc[sampleName,'Insertions_Left'][pos_ind-2])
INFO  @ Mon, 08 Apr 2024 16:14:16:
	 Done! 

INFO  @ Mon, 08 Apr 2024 16:14:16:
	 Done! 

INFO  @ Mon, 08 Apr 2024 16:14:16:
	 Removing Intermediate files... 

INFO  @ Mon, 08 Apr 2024 16:14:16:
	 Analysis Complete! 

